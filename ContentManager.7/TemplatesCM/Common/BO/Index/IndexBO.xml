<?xml version='1.0' encoding='iso-8859-1' ?>
<bo id='index'>
	<table name='tIndexCache' />
	<key name='CollectionID' />

	<!--
		il campo Lang in teoria non serve più, ma siccome alcuni elementi lo mettono nella
		where c'è bisogno di inizializzare il campo
	-->

	<field name='indexCacheID'	type='int'						default='' />
	<field name='IndexName'		type='varchar'		len='100'	default='' />
	<field name='Lang'			type='varchar'		len='3'		default='IT' />
	<field name='ShowInMap'		type='int'						default='1' />
	<field name='MapMaxDeep'	type='int'						default='-1' />
	<field name='indexData'		type='longtext'		len='100'	default='' />
	<field name='CollectionID'	type='int' />
	<field name='IDOwner'		type='int' />

	<event id='onAfterNew' when='onAfterNew' type='php'>
		<![CDATA[

				// in $pars

			FlexInclude(kClsPath . 'clsTreeIndex.php');

			$tree = TreeIndex::NewNode(NULL, 'BLOB:ID=-1', -1);

			// TBD: il salvataggio andrebbe fatto dal modulo indice, magari nell'evento AfterNew
 			$pars['BO']->SetField('indexData', serialize($tree));

			$id = MaxValue('CollectionID', 'tIndexCache');

			$pars['BO']->SetField('CollectionID', $id + 1);
		]]>
	</event>

	<event id='onAfterSave' when='onAfterSave' type='php'>
		<![CDATA[

			LogEvents::Log('index.change', array(
				'id' => $pars['BO']->mID,
			));

		]]>
	</event>

	<event id='onBeforeDel' when='onBeforeDel' type='php'>
	<![CDATA[

				// cancella da qui l'indice in modo da attivare il versioning
				// (la cancellazione del BO non segnala errore perché SQL con WHERE)

			inc::mod('modFlexIndex');

			FlexIndex::deleteIndex($pars['BO']->GetField('CollectionID'));

			LogEvents::Log('index.delete', array(
				'id'	=> $pars['BO']->mID,
				'name'	=> $pars['BO']->GetField('IndexName'),
			));

	]]>
	 </event>

</bo>